{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n\nvar userListReducer = function userListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_LIST':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar currentUserReducer = function currentUserReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGGED_IN':\n      return action.payload.user;\n\n    default:\n      return state;\n  }\n};\n\nvar sessionsReducer = function sessionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_SESSIONS':\n      return action.payload;\n\n    case 'POST_SESSION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'UPDATED_SESSION':\n      var originalSession = state.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      var index = state.indexOf(originalSession);\n\n      var sessionCopy = _toConsumableArray(state);\n\n      sessionCopy.splice(index, 1, action.payload);\n      return sessionCopy;\n\n    case 'DELETED_SESSION':\n      originalSession = state.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      index = state.indexOf(originalSession);\n      sessionCopy = _toConsumableArray(state);\n      sessionCopy.splice(index, 1);\n      return sessionCopy;\n\n    default:\n      return state;\n  }\n};\n\nvar balanceReducer = function balanceReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.balance;\n\n    case 'UPDATED_USER_BALANCE':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var userObject;\n\n  switch (action.type) {\n    case 'CREATED_USER':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name\n      };\n      return userObject;\n\n    case 'FETCHED_USER_DATA':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name\n      };\n      return userObject;\n\n    default:\n      return state;\n  }\n};\n\nvar sentTransactionsReducer = function sentTransactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_transactions;\n\n    case 'POSTED_TRANSACTION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    default:\n      return state;\n  }\n};\n\nvar receivedTransactionsReducer = function receivedTransactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_transactions;\n\n    default:\n      return state;\n  }\n};\n\nvar errorsReducer = function errorsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_ERRORS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar selectedProfileReducer = function selectedProfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHED_SELECTED_PROFILE\":\n      return [action.payload];\n\n    case \"CLEAR_SELECTED_PROFILE\":\n      return [];\n\n    case 'POSTED_TRANSACTION':\n      var stateCopy = [_objectSpread({}, state[0], {\n        received_transactions: [].concat(_toConsumableArray(state[0].received_transactions), [action.payload])\n      })];\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nvar loginErrorReducer = function loginErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_LOGIN_ERROR':\n      return [action.payload];\n\n    default:\n      return state;\n  }\n};\n\nvar sessionErrorReducer = function sessionErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_SESSION_ERRORS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  currentUser: currentUserReducer,\n  sessions: sessionsReducer,\n  balance: balanceReducer,\n  user: userReducer,\n  sent_transactions: sentTransactionsReducer,\n  received_transactions: receivedTransactionsReducer,\n  userList: userListReducer,\n  errors: errorsReducer,\n  loginError: loginErrorReducer,\n  sessionError: sessionErrorReducer,\n  selectedProfile: selectedProfileReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/reducers/index.js"],"names":["combineReducers","userListReducer","state","action","type","payload","currentUserReducer","user","sessionsReducer","originalSession","find","session","id","index","indexOf","sessionCopy","splice","balanceReducer","balance","userReducer","userObject","username","first_name","last_name","sentTransactionsReducer","sent_transactions","receivedTransactionsReducer","received_transactions","errorsReducer","selectedProfileReducer","stateCopy","loginErrorReducer","sessionErrorReducer","rootReducer","currentUser","sessions","userList","errors","loginError","sessionError","selectedProfile"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\nconst userListReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_LIST':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst currentUserReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'LOGGED_IN':\n      return action.payload.user\n    default:\n      return state\n  }\n}\n\nconst sessionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_SESSIONS':\n      return action.payload\n    case 'POST_SESSION':\n      return [...state, action.payload]\n    case 'UPDATED_SESSION':\n      let originalSession = state.find(session => session.id === action.payload.id)\n      let index = state.indexOf(originalSession)\n      let sessionCopy = [...state]\n      sessionCopy.splice(index, 1, action.payload)\n      return sessionCopy\n    case 'DELETED_SESSION':\n      originalSession = state.find(session => session.id === action.payload.id)\n      index = state.indexOf(originalSession)\n      sessionCopy = [...state]\n      sessionCopy.splice(index, 1)\n      return sessionCopy\n    default:\n      return state\n  }\n}\n\nconst balanceReducer = (state = 0, action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.balance\n    case 'UPDATED_USER_BALANCE':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst userReducer = (state = {}, action) => {\n  let userObject;\n  switch(action.type) {\n    case 'CREATED_USER':\n       userObject= {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name\n      }\n      return userObject\n    case 'FETCHED_USER_DATA':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name\n      }\n      return userObject\n    default:\n      return state\n  }\n}\n\nconst sentTransactionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_transactions\n    case 'POSTED_TRANSACTION':\n      return [...state, action.payload]\n    default:\n      return state\n  }\n}\n\nconst receivedTransactionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_transactions\n    default:\n      return state\n  }\n}\n\nconst errorsReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'DISPLAY_ERRORS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst selectedProfileReducer = (state = [], action) => {\n  switch(action.type) {\n    case \"FETCHED_SELECTED_PROFILE\":\n      return [action.payload]\n    case \"CLEAR_SELECTED_PROFILE\":\n      return []\n    case 'POSTED_TRANSACTION':\n      let stateCopy = [{...state[0], received_transactions: [...state[0].received_transactions, action.payload]}]\n      return stateCopy\n    default:\n      return state\n  }\n}\n\nconst loginErrorReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'DISPLAY_LOGIN_ERROR':\n      return [action.payload]\n    default:\n      return state\n  }\n}\n\nconst sessionErrorReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'DISPLAY_SESSION_ERRORS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  currentUser: currentUserReducer,\n  sessions: sessionsReducer,\n  balance: balanceReducer,\n  user: userReducer,\n  sent_transactions: sentTransactionsReducer,\n  received_transactions: receivedTransactionsReducer,\n  userList: userListReducer,\n  errors: errorsReducer,\n  loginError: loginErrorReducer,\n  sessionError: sessionErrorReducer,\n  selectedProfile: selectedProfileReducer\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}