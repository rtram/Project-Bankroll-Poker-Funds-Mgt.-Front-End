{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/Porfolio/module_5/poker_app_frontend/src/react/pokerdashboard/WinningPercentageDoughnutGraph.js\";\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Header } from 'semantic-ui-react';\nimport './Dashboard.css';\n\nvar WinningPercentageDoughnutGraph = function WinningPercentageDoughnutGraph(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.data ? React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"You win \", parseInt(winningPercentage * 100), \"% of the sessions you play.\") : null, React.createElement(Doughnut, {\n    data: dataObject.data,\n    width: 300,\n    height: 200,\n    options: {\n      title: {\n        text: 'Session Winning Percentage',\n        display: true,\n        fontsize: 200\n      },\n      legend: {\n        display: true,\n        position: \"bottom\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nvar dataObject = {\n  data: {\n    labels: ['Winning sessions', 'Losing Sessions'],\n    datasets: [{\n      label: 'Win Loss Percentage',\n      // CHANGE THIS KEY/VALUE TO DISPLAY DATA POINTS\n      data: this.props.data,\n      backgroundColor: ['rgba(0, 255, 0, .4)', 'rgba(255, 0, 0, .4)'],\n      borderColor: ['green', 'red'],\n      borderWidth: 1\n    }]\n  }\n};\nvar winCount;\nvar lossCount;\nvar winningPercentage;\n\nif (this.props.data) {\n  winCount = this.props.data[0];\n  lossCount = this.props.data[1];\n  winningPercentage = winCount / (winCount + lossCount);\n}\n\nexport default WinningPercentageDoughnutGraph;","map":{"version":3,"sources":["/Users/flatironschool/Development/Porfolio/module_5/poker_app_frontend/src/react/pokerdashboard/WinningPercentageDoughnutGraph.js"],"names":["React","Doughnut","Header","WinningPercentageDoughnutGraph","props","data","parseInt","winningPercentage","dataObject","title","text","display","fontsize","legend","position","labels","datasets","label","backgroundColor","borderColor","borderWidth","winCount","lossCount"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,iBAAP;;AAEA,IAAIC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAAC,KAAK;AAAA,SACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,IAAN,GAAa,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyBC,QAAQ,CAACC,iBAAiB,GAAG,GAArB,CAAjC,gCAAb,GAA+G,IADlH,EAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEC,UAAU,CAACH,IADnB;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAE;AACPI,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,4BADD;AAELC,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OADA;AAMPC,MAAAA,MAAM,EAAE;AACNF,QAAAA,OAAO,EAAE,IADH;AAENG,QAAAA,QAAQ,EAAE;AAFJ;AAND,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADwC;AAAA,CAA1C;;AAsBI,IAAIN,UAAU,GAAG;AACfH,EAAAA,IAAI,EAAE;AACFU,IAAAA,MAAM,EAAE,CAAC,kBAAD,EAAqB,iBAArB,CADN;AAEFC,IAAAA,QAAQ,EAAE,CAAC;AACPC,MAAAA,KAAK,EAAE,qBADA;AAEP;AACAZ,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAHV;AAIPa,MAAAA,eAAe,EAAE,CACb,qBADa,EAEb,qBAFa,CAJV;AAQPC,MAAAA,WAAW,EAAE,CACX,OADW,EAEX,KAFW,CARN;AAYPC,MAAAA,WAAW,EAAE;AAZN,KAAD;AAFR;AADS,CAAjB;AAoBA,IAAIC,QAAJ;AACA,IAAIC,SAAJ;AACA,IAAIf,iBAAJ;;AAEA,IAAI,KAAKH,KAAL,CAAWC,IAAf,EAAqB;AACnBgB,EAAAA,QAAQ,GAAG,KAAKjB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAAX;AACAiB,EAAAA,SAAS,GAAG,KAAKlB,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAAZ;AACAE,EAAAA,iBAAiB,GAAIc,QAAQ,IAAEA,QAAQ,GAAGC,SAAb,CAA7B;AACD;;AAKL,eAAenB,8BAAf","sourcesContent":["import React from 'react'\nimport { Doughnut } from 'react-chartjs-2'\nimport { Header } from 'semantic-ui-react'\nimport './Dashboard.css'\n\nlet WinningPercentageDoughnutGraph = props => (\n  <div>\n    {props.data ? <Header as='h2'>You win {parseInt(winningPercentage * 100)}% of the sessions you play.</Header> : null}\n    <Doughnut\n      data={dataObject.data}\n      width={300}\n      height={200}\n      options={{\n        title: {\n          text: 'Session Winning Percentage',\n          display: true,\n          fontsize: 200\n        },\n        legend: {\n          display: true,\n          position: \"bottom\"\n        }\n      }}\n    />\n  </div>\n)\n\n    let dataObject = {\n      data: {\n          labels: ['Winning sessions', 'Losing Sessions'],\n          datasets: [{\n              label: 'Win Loss Percentage',\n              // CHANGE THIS KEY/VALUE TO DISPLAY DATA POINTS\n              data: this.props.data,\n              backgroundColor: [\n                  'rgba(0, 255, 0, .4)',\n                  'rgba(255, 0, 0, .4)',\n              ],\n              borderColor: [\n                'green',\n                'red'\n              ],\n              borderWidth: 1\n          }]\n      }\n    }\n\n    let winCount;\n    let lossCount;\n    let winningPercentage;\n\n    if (this.props.data) {\n      winCount = this.props.data[0]\n      lossCount = this.props.data[1]\n      winningPercentage = (winCount/(winCount + lossCount))\n    }\n\n\n\n\nexport default WinningPercentageDoughnutGraph\n"]},"metadata":{},"sourceType":"module"}