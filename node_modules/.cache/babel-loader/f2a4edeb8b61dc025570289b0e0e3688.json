{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { combineReducers } from 'redux';\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.data;\n\n    case 'POST_SESSION':\n      return _objectSpread({}, state, {\n        sessions: [].concat(_toConsumableArray(state.sessions), [action.payload])\n      });\n\n    case 'UPDATED_SESSION':\n      var originalSession = state.sessions.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      var index = state.sessions.indexOf(originalSession);\n      return _objectSpread({}, state, {\n        sessions: _toConsumableArray(state.sessions.splice(index, 1, action.payload))\n      });\n      debugger;\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  user: userReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/reducers/index.js"],"names":["combineReducers","userReducer","state","action","type","data","sessions","payload","originalSession","find","session","id","index","indexOf","splice","rootReducer","user"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC1C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,mBAAL;AACE,aAAOD,MAAM,CAACE,IAAd;;AACF,SAAK,cAAL;AACE,+BAAWH,KAAX;AAAkBI,QAAAA,QAAQ,+BAAKJ,KAAK,CAACI,QAAX,IAAqBH,MAAM,CAACI,OAA5B;AAA1B;;AACF,SAAK,iBAAL;AACE,UAAIC,eAAe,GAAGN,KAAK,CAACI,QAAN,CAAeG,IAAf,CAAoB,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,EAAR,KAAeR,MAAM,CAACI,OAAP,CAAeI,EAAlC;AAAA,OAA3B,CAAtB;AACA,UAAIC,KAAK,GAAGV,KAAK,CAACI,QAAN,CAAeO,OAAf,CAAuBL,eAAvB,CAAZ;AACA,+BAAWN,KAAX;AAAkBI,QAAAA,QAAQ,qBAAKJ,KAAK,CAACI,QAAN,CAAeQ,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B,EAAgCT,MAAM,CAACI,OAAvC,CAAL;AAA1B;AACA;;AACF;AACE,aAAOL,KAAP;AAXJ;AAaD,CAdD;;AAgBA,IAAMa,WAAW,GAAGf,eAAe,CAAC;AAClCgB,EAAAA,IAAI,EAAEf;AAD4B,CAAD,CAAnC;AAIA,eAAec,WAAf","sourcesContent":["import { combineReducers } from 'redux'\n\nconst userReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.data\n    case 'POST_SESSION':\n      return {...state, sessions:[...state.sessions, action.payload]}\n    case 'UPDATED_SESSION':\n      let originalSession = state.sessions.find(session => session.id === action.payload.id)\n      let index = state.sessions.indexOf(originalSession)\n      return {...state, sessions:[...state.sessions.splice(index, 1, action.payload)]}\n      debugger\n    default:\n      return state\n  }\n}\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}