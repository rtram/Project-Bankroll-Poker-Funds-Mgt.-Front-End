{"ast":null,"code":"// const URL = 'http://localhost:3001/api/v1'\nvar URL = 'https://project-bankroll-backend.herokuapp.com/api/v1'; // const loading = () => {\n//   return {type: \"LOADING\"}\n// }\n\nvar postedSession = function postedSession(data) {\n  return {\n    type: 'POST_SESSION',\n    payload: data\n  };\n};\n\nvar displaySessionErrors = function displaySessionErrors(data) {\n  return {\n    type: 'DISPLAY_SESSION_ERRORS',\n    payload: data\n  };\n};\n\nvar postingSession = function postingSession(sessionObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"\".concat(URL, \"/sessions\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(sessionObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.errors) {\n        dispatch(displaySessionErrors(data.errors));\n      } else {\n        dispatch(postedSession(data));\n      }\n    });\n  };\n};\n\nvar updatedSession = function updatedSession(data) {\n  return {\n    type: 'UPDATED_SESSION',\n    payload: data\n  };\n};\n\nvar updatingSession = function updatingSession(sessionObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"\".concat(URL, \"/sessions/\").concat(sessionObject.id), {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(sessionObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(updatedSession(data));\n    });\n  };\n};\n\nvar deletedSession = function deletedSession(data) {\n  return {\n    type: 'DELETED_SESSION',\n    payload: data\n  };\n};\n\nvar deletingSession = function deletingSession(sessionObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(deletedSession(sessionObject));\n    fetch(\"\".concat(URL, \"/sessions/\").concat(sessionObject.id), {\n      method: \"DELETE\",\n      headers: {\n        \"Authentication\": \"Bearer \".concat(token)\n      }\n    });\n  };\n};\n\nexport { postingSession, updatingSession, deletingSession };","map":{"version":3,"sources":["/Users/flatironschool/Development/Porfolio/module_5/poker_app_frontend/src/redux/actions/sessions.js"],"names":["URL","postedSession","data","type","payload","displaySessionErrors","postingSession","sessionObject","token","localStorage","getItem","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","errors","updatedSession","updatingSession","id","deletedSession","deletingSession"],"mappings":"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","sourcesContent":["// const URL = 'http://localhost:3001/api/v1'\nconst URL = 'https://project-bankroll-backend.herokuapp.com/api/v1'\n\n// const loading = () => {\n//   return {type: \"LOADING\"}\n// }\n\nconst postedSession = data => {\n  return {\n    type: 'POST_SESSION',\n    payload: data\n  };\n}\n\nconst displaySessionErrors = data => {\n  return {\n    type: 'DISPLAY_SESSION_ERRORS',\n    payload: data\n  }\n}\n\nconst postingSession = sessionObject => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    fetch(`${URL}/sessions`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(sessionObject)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.errors) {\n          dispatch(displaySessionErrors(data.errors))\n        } else {\n          dispatch(postedSession(data))\n        }\n      }\n    )\n  }\n}\n\nconst updatedSession = data => {\n  return {\n    type: 'UPDATED_SESSION',\n    payload: data\n  };\n}\n\nconst updatingSession = sessionObject => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    fetch(`${URL}/sessions/${sessionObject.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(sessionObject)\n    })\n      .then(res => res.json())\n      .then(data => dispatch(updatedSession(data)))\n  }\n}\n\nconst deletedSession = data => {\n  return {\n    type: 'DELETED_SESSION',\n    payload: data\n  };\n}\n\nconst deletingSession = sessionObject => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    dispatch(deletedSession(sessionObject))\n    fetch(`${URL}/sessions/${sessionObject.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authentication\" : `Bearer ${token}`\n      }\n    })\n  }\n}\n\nexport { postingSession, updatingSession, deletingSession };\n"]},"metadata":{},"sourceType":"module"}