{"ast":null,"code":"var URL = 'http://localhost:3001/api/v1/users';\n\nvar updatedUserBalance = function updatedUserBalance(data) {\n  return {\n    type: \"UPDATED_USER_BALANCE\",\n    payload: data\n  };\n};\n\nvar updatingUserBalance = function updatingUserBalance(userObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"\".concat(URL, \"/\").concat(userObject.id), {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(userObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(updatedUserBalance(data));\n    });\n  };\n};\n\nvar updatedRecipientBalance = function updatedRecipientBalance(data) {\n  debugger;\n  return {\n    type: \"UPDATED_RECIPIENT_BALANCE\",\n    payload: data\n  };\n};\n\nvar updatingRecipientBalance = function updatingRecipientBalance(userObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"\".concat(URL, \"/\").concat(userObject.id), {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(userObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return dispatch(updatedRecipientBalance(data));\n    });\n  };\n};\n\nexport { updatingUserBalance, updatingRecipientBalance };","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/actions/balances.js"],"names":["URL","updatedUserBalance","data","type","payload","updatingUserBalance","userObject","token","localStorage","getItem","dispatch","fetch","id","method","headers","body","JSON","stringify","then","res","json","updatedRecipientBalance","updatingRecipientBalance"],"mappings":"AAAA,IAAMA,GAAG,GAAG,oCAAZ;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAU;AACnC,SAAO;AACLC,IAAAA,IAAI,EAAC,sBADA;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,UAAD,EAAgB;AAC1C,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,KAAK,WAAIX,GAAJ,cAAWM,UAAU,CAACM,EAAtB,GAA4B;AAC/BC,MAAAA,MAAM,EAAE,OADuB;AAE/BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,2CAA6BP,KAA7B;AAFO,OAFsB;AAM/BQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,UAAf;AANyB,KAA5B,CAAL,CAQGY,IARH,CAQQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KARX,EASGF,IATH,CASQ,UAAAhB,IAAI;AAAA,aAAIQ,QAAQ,CAACT,kBAAkB,CAACC,IAAD,CAAnB,CAAZ;AAAA,KATZ;AAUD,GAXD;AAYD,CAdD;;AAgBA,IAAMmB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACnB,IAAD,EAAU;AACxC;AACA,SAAO;AACLC,IAAAA,IAAI,EAAC,2BADA;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CAND;;AAQA,IAAMoB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAChB,UAAD,EAAgB;AAC/C,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,KAAK,WAAIX,GAAJ,cAAWM,UAAU,CAACM,EAAtB,GAA4B;AAC/BC,MAAAA,MAAM,EAAE,OADuB;AAE/BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,2CAA6BP,KAA7B;AAFO,OAFsB;AAM/BQ,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,UAAf;AANyB,KAA5B,CAAL,CAQGY,IARH,CAQQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KARX,EASGF,IATH,CASQ,UAAAhB,IAAI;AAAA,aAAIQ,QAAQ,CAACW,uBAAuB,CAACnB,IAAD,CAAxB,CAAZ;AAAA,KATZ;AAUD,GAXD;AAYD,CAdD;;AAgBA,SAASG,mBAAT,EAA8BiB,wBAA9B","sourcesContent":["const URL = 'http://localhost:3001/api/v1/users'\n\nconst updatedUserBalance = (data) => {\n  return {\n    type:\"UPDATED_USER_BALANCE\",\n    payload: data\n  }\n}\n\nconst updatingUserBalance = (userObject) => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    fetch(`${URL}/${userObject.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(userObject)\n    })\n      .then(res => res.json())\n      .then(data => dispatch(updatedUserBalance(data)))\n  }\n}\n\nconst updatedRecipientBalance = (data) => {\n  debugger\n  return {\n    type:\"UPDATED_RECIPIENT_BALANCE\",\n    payload: data\n  }\n}\n\nconst updatingRecipientBalance = (userObject) => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    fetch(`${URL}/${userObject.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(userObject)\n    })\n      .then(res => res.json())\n      .then(data => dispatch(updatedRecipientBalance(data)))\n  }\n}\n\nexport { updatingUserBalance, updatingRecipientBalance };\n"]},"metadata":{},"sourceType":"module"}