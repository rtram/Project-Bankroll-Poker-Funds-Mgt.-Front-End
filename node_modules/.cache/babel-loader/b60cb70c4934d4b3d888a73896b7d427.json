{"ast":null,"code":"var postedRequest = function postedRequest(data) {\n  return {\n    type: \"POSTED_REQUEST\",\n    payload: data\n  };\n};\n\nvar postingRequest = function postingRequest(requestObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/api/v1/requests\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(requestObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(postedRequest(data));\n    });\n  };\n};\n\nvar completedTransaction = function completedTransaction(data) {\n  return {\n    type: \"COMPLETED_TRANSACTION\",\n    payload: data\n  };\n};\n\nvar completingTransaction = function completingTransaction(transactionObject, requestObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/api/v1/transactions\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(userObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(completedTransaction(data));\n      debugger;\n    });\n  };\n};\n\nvar deletedRequest = function deletedRequest(data) {\n  return {\n    type: 'DELETED_REQUEST',\n    payload: data\n  };\n};\n\nvar deletingRequest = function deletingRequest(requestObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(deletedRequest(requestObject));\n    fetch(\"http://localhost:3001/api/v1/requests/\".concat(requestObject.id), {\n      method: \"DELETE\",\n      headers: {\n        \"Authentication\": \"Bearer \".concat(token)\n      }\n    });\n  };\n};\n\nexport { completingTransaction, deletingRequest, postingRequest };","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/actions/requests.js"],"names":["postedRequest","data","type","payload","postingRequest","requestObject","token","localStorage","getItem","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","completedTransaction","completingTransaction","transactionObject","userObject","deletedRequest","deletingRequest","id"],"mappings":"AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAC,gBADA;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACC,aAAD,EAAmB;AACxC,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,UAACC,QAAD,EAAc;AACnBC,IAAAA,KAAK,CAAC,uCAAD,EAA0C;AAC7CC,MAAAA,MAAM,EAAE,MADqC;AAE7CC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,2CAA6BN,KAA7B;AAFO,OAFoC;AAM7CO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,aAAf;AANuC,KAA1C,CAAL,CAQCW,IARD,CAQM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KART,EASCF,IATD,CASM,UAAAf,IAAI,EAAI;AACZQ,MAAAA,QAAQ,CAACT,aAAa,CAACC,IAAD,CAAd,CAAR;AACD,KAXD;AAYD,GAbD;AAcD,CAhBD;;AAkBA,IAAMkB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAClB,IAAD,EAAU;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAC,uBADA;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMmB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,iBAAD,EAAoBhB,aAApB,EAAsC;AAClE,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,UAACC,QAAD,EAAc;AACnBC,IAAAA,KAAK,CAAC,2CAAD,EAA8C;AACjDC,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,2CAA6BN,KAA7B;AAFO,OAFwC;AAMjDO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,UAAf;AAN2C,KAA9C,CAAL,CAQCN,IARD,CAQM,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KART,EASCF,IATD,CASM,UAAAf,IAAI,EAAI;AACZQ,MAAAA,QAAQ,CAACU,oBAAoB,CAAClB,IAAD,CAArB,CAAR;AACA;AACD,KAZD;AAaD,GAdD;AAeD,CAjBD;;AAmBA,IAAMsB,cAAc,GAAG,SAAjBA,cAAiB,CAAAtB,IAAI,EAAI;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMuB,eAAe,GAAG,SAAlBA,eAAkB,CAAAnB,aAAa,EAAI;AACvC,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACc,cAAc,CAAClB,aAAD,CAAf,CAAR;AACAK,IAAAA,KAAK,iDAA0CL,aAAa,CAACoB,EAAxD,GAA8D;AACjEd,MAAAA,MAAM,EAAE,QADyD;AAEjEC,MAAAA,OAAO,EAAE;AACP,2CAA6BN,KAA7B;AADO;AAFwD,KAA9D,CAAL;AAMD,GARD;AASD,CAXD;;AAcA,SAASc,qBAAT,EAAgCI,eAAhC,EAAiDpB,cAAjD","sourcesContent":["\nconst postedRequest = (data) => {\n  return {\n    type:\"POSTED_REQUEST\",\n    payload: data\n  }\n}\n\nconst postingRequest = (requestObject) => {\n  let token = localStorage.getItem('token')\n  return (dispatch) => {\n    fetch(\"http://localhost:3001/api/v1/requests\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(requestObject)\n    })\n    .then(res => res.json())\n    .then(data => {\n      dispatch(postedRequest(data))\n    })\n  }\n}\n\nconst completedTransaction = (data) => {\n  return {\n    type:\"COMPLETED_TRANSACTION\",\n    payload: data\n  }\n}\n\nconst completingTransaction = (transactionObject, requestObject) => {\n  let token = localStorage.getItem('token')\n  return (dispatch) => {\n    fetch(\"http://localhost:3001/api/v1/transactions\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(userObject)\n    })\n    .then(res => res.json())\n    .then(data => {\n      dispatch(completedTransaction(data))\n      debugger\n    })\n  }\n}\n\nconst deletedRequest = data => {\n  return {\n    type: 'DELETED_REQUEST',\n    payload: data\n  };\n}\n\nconst deletingRequest = requestObject => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    dispatch(deletedRequest(requestObject))\n    fetch(`http://localhost:3001/api/v1/requests/${requestObject.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authentication\" : `Bearer ${token}`\n      }\n    })\n  }\n}\n\n\nexport { completingTransaction, deletingRequest, postingRequest };\n"]},"metadata":{},"sourceType":"module"}