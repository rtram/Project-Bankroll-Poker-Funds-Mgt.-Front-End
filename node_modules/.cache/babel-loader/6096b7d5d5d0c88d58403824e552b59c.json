{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOADING\":\n      return true;\n\n    case \"FETCHED_SESSIONS\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar currentUserReducer = function currentUserReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGGED_IN':\n      return action.payload.user;\n\n    default:\n      return state;\n  }\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var userObject;\n\n  switch (action.type) {\n    case 'CREATED_USER':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      };\n      return userObject;\n\n    case 'FETCHED_USER_DATA':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      };\n      return userObject;\n\n    default:\n      return state;\n  }\n};\n\nvar sessionsReducer = function sessionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_SESSIONS':\n      return action.payload;\n\n    case 'POST_SESSION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'UPDATED_SESSION':\n      var originalSession = state.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      var index = state.indexOf(originalSession);\n\n      var sessionCopy = _toConsumableArray(state);\n\n      sessionCopy.splice(index, 1, action.payload);\n      return sessionCopy;\n\n    case 'DELETED_SESSION':\n      originalSession = state.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      index = state.indexOf(originalSession);\n      sessionCopy = _toConsumableArray(state);\n      sessionCopy.splice(index, 1);\n      return sessionCopy;\n\n    default:\n      return state;\n  }\n};\n\nvar balanceReducer = function balanceReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.balance;\n\n    case 'UPDATED_USER_BALANCE':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar sentTransactionsReducer = function sentTransactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_transactions;\n\n    case 'POSTED_TRANSACTION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'COMPLETED_TRANSACTION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'POSTED_LIKE':\n      var originalTransaction = state.filter(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      var index = state.indexOf(originalTransaction[0]);\n      var copyState = state.slice();\n      copyState.splice(index, 1, action.payload);\n      return copyState;\n\n    default:\n      return state;\n  }\n};\n\nvar receivedTransactionsReducer = function receivedTransactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_transactions;\n\n    case 'POSTED_LIKE':\n      var originalTransaction = state.filter(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      var index = state.indexOf(originalTransaction[0]);\n      var copyState = state.slice();\n      copyState.splice(index, 1, action.payload);\n      return copyState;\n\n    default:\n      return state;\n  }\n};\n\nvar sentRequestsReducer = function sentRequestsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_requests;\n\n    case \"POSTED_REQUEST\":\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'DELETED_REQUEST':\n      var originalRequest = state.find(function (request) {\n        return request.id === action.payload.id;\n      });\n\n      if (originalRequest !== undefined) {\n        var index = state.indexOf(originalRequest);\n\n        var requestCopy = _toConsumableArray(state);\n\n        requestCopy.splice(index, 1);\n        return requestCopy;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar receivedRequestsReducer = function receivedRequestsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_requests;\n\n    case 'FETCHED_USER_INBOX':\n      return action.payload;\n\n    case 'DELETED_REQUEST':\n      var originalRequest = state.find(function (request) {\n        return request.id === action.payload.id;\n      });\n\n      if (originalRequest !== undefined) {\n        var index = state.indexOf(originalRequest);\n\n        var requestCopy = _toConsumableArray(state);\n\n        requestCopy.splice(index, 1);\n        return requestCopy;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar userListReducer = function userListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_LIST':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar errorsReducer = function errorsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_ERRORS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar loginErrorReducer = function loginErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_LOGIN_ERROR':\n      return [action.payload];\n\n    default:\n      return state;\n  }\n};\n\nvar sessionErrorReducer = function sessionErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_SESSION_ERRORS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar selectedProfileReducer = function selectedProfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHED_SELECTED_PROFILE\":\n      return [action.payload];\n\n    case \"CLEAR_SELECTED_PROFILE\":\n      return [];\n\n    case 'POSTED_TRANSACTION':\n      var stateCopy = [_objectSpread({}, state[0], {\n        received_transactions: [].concat(_toConsumableArray(state[0].received_transactions), [action.payload])\n      })];\n      return stateCopy;\n\n    case 'POSTED_LIKE': // debugger\n\n    default:\n      return state;\n  }\n};\n\nvar appReducer = combineReducers({\n  loading: loadingReducer,\n  currentUser: currentUserReducer,\n  user: userReducer,\n  sessions: sessionsReducer,\n  balance: balanceReducer,\n  sent_transactions: sentTransactionsReducer,\n  received_transactions: receivedTransactionsReducer,\n  sent_requests: sentRequestsReducer,\n  received_requests: receivedRequestsReducer,\n  userList: userListReducer,\n  errors: errorsReducer,\n  loginError: loginErrorReducer,\n  sessionError: sessionErrorReducer,\n  selectedProfile: selectedProfileReducer\n});\n\nvar rootReducer = function rootReducer(state, action) {\n  if (action.type === 'USER_LOGOUT') {\n    localStorage.clear();\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/reducers/index.js"],"names":["combineReducers","loadingReducer","state","action","type","currentUserReducer","payload","user","userReducer","userObject","username","first_name","last_name","url","sessionsReducer","originalSession","find","session","id","index","indexOf","sessionCopy","splice","balanceReducer","balance","sentTransactionsReducer","sent_transactions","originalTransaction","filter","transactionObject","copyState","slice","receivedTransactionsReducer","received_transactions","sentRequestsReducer","sent_requests","originalRequest","request","undefined","requestCopy","receivedRequestsReducer","received_requests","userListReducer","errorsReducer","loginErrorReducer","sessionErrorReducer","selectedProfileReducer","stateCopy","appReducer","loading","currentUser","sessions","userList","errors","loginError","sessionError","selectedProfile","rootReducer","localStorage","clear"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return true\n    case \"FETCHED_SESSIONS\":\n      return false;\n    default:\n      return state\n  }\n}\n\nconst currentUserReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'LOGGED_IN':\n      return action.payload.user\n    default:\n      return state\n  }\n}\n\nconst userReducer = (state = {}, action) => {\n  let userObject;\n  switch(action.type) {\n    case 'CREATED_USER':\n       userObject= {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      }\n      return userObject\n    case 'FETCHED_USER_DATA':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      }\n      return userObject\n    default:\n      return state\n  }\n}\n\nconst sessionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_SESSIONS':\n      return action.payload\n    case 'POST_SESSION':\n      return [...state, action.payload]\n    case 'UPDATED_SESSION':\n      let originalSession = state.find(session => session.id === action.payload.id)\n      let index = state.indexOf(originalSession)\n      let sessionCopy = [...state]\n      sessionCopy.splice(index, 1, action.payload)\n      return sessionCopy\n    case 'DELETED_SESSION':\n      originalSession = state.find(session => session.id === action.payload.id)\n      index = state.indexOf(originalSession)\n      sessionCopy = [...state]\n      sessionCopy.splice(index, 1)\n      return sessionCopy\n    default:\n      return state\n  }\n}\n\nconst balanceReducer = (state = 0, action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.balance\n    case 'UPDATED_USER_BALANCE':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst sentTransactionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_transactions\n    case 'POSTED_TRANSACTION':\n      return [...state, action.payload]\n    case 'COMPLETED_TRANSACTION':\n      return [...state, action.payload]\n    case 'POSTED_LIKE':\n      let originalTransaction = state.filter(transactionObject => transactionObject.id === action.payload.id)\n      let index = state.indexOf(originalTransaction[0])\n      let copyState = state.slice()\n      copyState.splice(index, 1, action.payload)\n      return copyState\n    default:\n      return state\n  }\n}\n\nconst receivedTransactionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_transactions\n    case 'POSTED_LIKE':\n      let originalTransaction = state.filter(transactionObject => transactionObject.id === action.payload.id)\n      let index = state.indexOf(originalTransaction[0])\n      let copyState = state.slice()\n      copyState.splice(index, 1, action.payload)\n      return copyState\n    default:\n      return state\n  }\n}\n\nconst sentRequestsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_requests\n    case \"POSTED_REQUEST\":\n      return [...state, action.payload]\n    case 'DELETED_REQUEST':\n      let originalRequest = state.find(request => request.id === action.payload.id)\n      if (originalRequest !== undefined) {\n        let index = state.indexOf(originalRequest)\n        let requestCopy = [...state]\n        requestCopy.splice(index, 1)\n        return requestCopy\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst receivedRequestsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_requests\n    case 'FETCHED_USER_INBOX':\n      return action.payload\n    case 'DELETED_REQUEST':\n      let originalRequest = state.find(request => request.id === action.payload.id)\n      if (originalRequest !== undefined) {\n        let index = state.indexOf(originalRequest)\n        let requestCopy = [...state]\n        requestCopy.splice(index, 1)\n        return requestCopy\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst userListReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_LIST':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst errorsReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'DISPLAY_ERRORS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loginErrorReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'DISPLAY_LOGIN_ERROR':\n      return [action.payload]\n    default:\n      return state\n  }\n}\n\nconst sessionErrorReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'DISPLAY_SESSION_ERRORS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst selectedProfileReducer = (state = [], action) => {\n  switch(action.type) {\n    case \"FETCHED_SELECTED_PROFILE\":\n      return [action.payload]\n    case \"CLEAR_SELECTED_PROFILE\":\n      return []\n    case 'POSTED_TRANSACTION':\n      let stateCopy = [{...state[0], received_transactions: [...state[0].received_transactions, action.payload]}]\n      return stateCopy\n    case 'POSTED_LIKE':\n      // debugger\n    default:\n      return state\n  }\n}\n\nconst appReducer = combineReducers({\n  loading: loadingReducer,\n  currentUser: currentUserReducer,\n  user: userReducer,\n  sessions: sessionsReducer,\n  balance: balanceReducer,\n  sent_transactions: sentTransactionsReducer,\n  received_transactions: receivedTransactionsReducer,\n  sent_requests: sentRequestsReducer,\n  received_requests: receivedRequestsReducer,\n  userList: userListReducer,\n  errors: errorsReducer,\n  loginError: loginErrorReducer,\n  sessionError: sessionErrorReducer,\n  selectedProfile: selectedProfileReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'USER_LOGOUT'){\n    localStorage.clear()\n    state = undefined\n  }\n\n  return appReducer(state, action)\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}