{"ast":null,"code":"var URL = 'http://localhost:3001/api/v1/login%20';\n\nvar loggedIn = function loggedIn(data) {\n  localStorage.setItem('token', data.jwt);\n  return {\n    type: \"LOGGED_IN\",\n    payload: data\n  };\n};\n\nvar loggingIn = function loggingIn(userObject) {\n  return function (dispatch) {\n    fetch(URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      if (data.message) {\n        debugger;\n      } else {\n        dispatch(loggedIn(data));\n      }\n    });\n  };\n};\n\nexport { loggingIn };","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/actions/login.js"],"names":["URL","loggedIn","data","localStorage","setItem","jwt","type","payload","loggingIn","userObject","dispatch","fetch","method","headers","body","JSON","stringify","then","res","json","message"],"mappings":"AAAA,IAAMA,GAAG,GAAG,uCAAZ;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzBC,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,IAAI,CAACG,GAAnC;AACA,SAAO;AACLC,IAAAA,IAAI,EAAC,WADA;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CAND;;AAQA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,UAAD,EAAgB;AAChC,SAAO,UAAAC,QAAQ,EAAI;AACjBC,IAAAA,KAAK,CAACX,GAAD,EAAM;AACTY,MAAAA,MAAM,EAAE,MADC;AAETC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFA;AAKTC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,UAAf;AALG,KAAN,CAAL,CAOGQ,IAPH,CAOQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAPX,EAQGF,IARH,CAQQ,UAAAf,IAAI,EAAI;AACZ,UAAIA,IAAI,CAACkB,OAAT,EAAkB;AAChB;AACD,OAFD,MAEO;AACLV,QAAAA,QAAQ,CAACT,QAAQ,CAACC,IAAD,CAAT,CAAR;AACD;AACF,KAdH;AAgBD,GAjBD;AAkBD,CAnBD;;AAqBA,SAASM,SAAT","sourcesContent":["const URL = 'http://localhost:3001/api/v1/login%20'\n\nconst loggedIn = (data) => {\n  localStorage.setItem('token', data.jwt)\n  return {\n    type:\"LOGGED_IN\",\n    payload: data\n  }\n}\n\nconst loggingIn = (userObject) => {\n  return dispatch => {\n    fetch(URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userObject)\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.message) {\n          debugger\n        } else {\n          dispatch(loggedIn(data))\n        }\n      }\n    )\n  }\n}\n\nexport { loggingIn };\n"]},"metadata":{},"sourceType":"module"}