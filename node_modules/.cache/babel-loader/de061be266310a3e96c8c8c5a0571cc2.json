{"ast":null,"code":"var fetchedUserRequests = function fetchedUserRequests(data) {\n  return {\n    type: \"FETCHED_USER_DATA\",\n    payload: data\n  };\n};\n\nvar fetchingUserRequests = function fetchingUserRequests(user_id) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"\".concat(URL, \"/\").concat(user_id), {\n      method: 'GET',\n      headers: {\n        \"Authentication\": \"Bearer \".concat(token),\n        \"userRequest\": true\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(fetchedUserRequests(data));\n    });\n  };\n};\n\nvar postedRequest = function postedRequest(data) {\n  debugger;\n  return {\n    type: \"POSTED_REQUEST\",\n    payload: data\n  };\n};\n\nvar postingRequest = function postingRequest(requestObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/api/v1/requests\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(requestObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(postedRequest(data));\n    });\n  };\n};\n\nvar completedTransaction = function completedTransaction(data) {\n  return {\n    type: \"COMPLETED_TRANSACTION\",\n    payload: data\n  };\n};\n\nvar completingTransaction = function completingTransaction(transactionObject, requestObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/api/v1/transactions\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\": \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(transactionObject)\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      dispatch(completedTransaction(data));\n    });\n    dispatch(deletingRequest(requestObject));\n  };\n};\n\nvar deletedRequest = function deletedRequest(data) {\n  return {\n    type: 'DELETED_REQUEST',\n    payload: data\n  };\n};\n\nvar deletingRequest = function deletingRequest(requestObject) {\n  var token = localStorage.getItem('token');\n  return function (dispatch) {\n    dispatch(deletedRequest(requestObject));\n    fetch(\"http://localhost:3001/api/v1/requests/\".concat(requestObject.id), {\n      method: \"DELETE\",\n      headers: {\n        \"Authentication\": \"Bearer \".concat(token)\n      }\n    });\n  };\n};\n\nexport { completingTransaction, deletingRequest, postingRequest };","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/actions/requests.js"],"names":["fetchedUserRequests","data","type","payload","fetchingUserRequests","user_id","token","localStorage","getItem","dispatch","fetch","URL","method","headers","then","res","json","postedRequest","postingRequest","requestObject","body","JSON","stringify","completedTransaction","completingTransaction","transactionObject","deletingRequest","deletedRequest","id"],"mappings":"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","sourcesContent":["const fetchedUserRequests = (data) => {\n  return {\n    type:\"FETCHED_USER_DATA\",\n    payload: data\n  }\n}\n\nconst fetchingUserRequests = (user_id) => {\n  let token = localStorage.getItem('token')\n  return (dispatch) => {\n    fetch(`${URL}/${user_id}`, {\n      method: 'GET',\n      headers: {\n        \"Authentication\" : `Bearer ${token}`,\n        \"userRequest\": true\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      dispatch(fetchedUserRequests(data))\n    })\n  }\n}\n\nconst postedRequest = (data) => {\n  debugger\n  return {\n    type:\"POSTED_REQUEST\",\n    payload: data\n  }\n}\n\nconst postingRequest = (requestObject) => {\n  let token = localStorage.getItem('token')\n  return (dispatch) => {\n    fetch(\"http://localhost:3001/api/v1/requests\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(requestObject)\n    })\n    .then(res => res.json())\n    .then(data => {\n      dispatch(postedRequest(data))\n    })\n  }\n}\n\nconst completedTransaction = (data) => {\n  return {\n    type:\"COMPLETED_TRANSACTION\",\n    payload: data\n  }\n}\n\nconst completingTransaction = (transactionObject, requestObject) => {\n  let token = localStorage.getItem('token')\n  return (dispatch) => {\n    fetch(\"http://localhost:3001/api/v1/transactions\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authentication\" : `Bearer ${token}`\n      },\n      body: JSON.stringify(transactionObject)\n    })\n    .then(res => res.json())\n    .then(data => {\n      dispatch(completedTransaction(data))\n    })\n    dispatch(deletingRequest(requestObject))\n  }\n}\n\nconst deletedRequest = data => {\n  return {\n    type: 'DELETED_REQUEST',\n    payload: data\n  };\n}\n\nconst deletingRequest = requestObject => {\n  let token = localStorage.getItem('token')\n  return dispatch => {\n    dispatch(deletedRequest(requestObject))\n    fetch(`http://localhost:3001/api/v1/requests/${requestObject.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Authentication\" : `Bearer ${token}`\n      }\n    })\n  }\n}\n\n\nexport { completingTransaction, deletingRequest, postingRequest };\n"]},"metadata":{},"sourceType":"module"}