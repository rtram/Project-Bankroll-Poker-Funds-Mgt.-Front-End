{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/module_5/poker_app_frontend/src/react/transfer/profilePage/PaymentConfirmation.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updatingUserBalance } from '../../../redux/actions/balances.js';\nimport { Button, Modal, Input } from 'semantic-ui-react';\n\nvar PaymentConfirmation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PaymentConfirmation, _Component);\n\n  function PaymentConfirmation() {\n    var _this;\n\n    _classCallCheck(this, PaymentConfirmation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PaymentConfirmation).call(this));\n\n    _this.handlePayment = function () {\n      var currentUserObject = {\n        id: _this.props.currentUser,\n        balance: _this.calculateTotal()\n      };\n      var recipientBalance = _this.props.selectedProfile.balance + _this.state.amount;\n      var recipientObject = {\n        id: _this.props.selectedProfile.id,\n        balance: recipientBalance\n      };\n      debugger;\n\n      _this.props.updatingUserBalance(currentUserObject);\n\n      _this.props.clearWithdrawState();\n\n      _this.handleToggle();\n    };\n\n    _this.handleToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.calculateTotal = function () {\n      var balance = _this.props.balance;\n\n      if (isNaN(balance)) {\n        balance = 0;\n      }\n\n      var payment = _this.state.amount;\n\n      if (isNaN(payment) || payment === '') {\n        payment = 0;\n      }\n\n      var newTotal = parseFloat(balance) - parseFloat(payment);\n      return newTotal;\n    };\n\n    _this.state = {\n      amount: 0,\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(PaymentConfirmation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        open: this.state.open,\n        size: \"large\",\n        trigger: React.createElement(Button, {\n          onClick: this.handleToggle,\n          color: \"blue\",\n          style: {\n            width: '200px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Pay\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Pay \", this.props.selectedProfile.first_name), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChange: this.handleChange,\n        action: {\n          color: 'green',\n          labelPosition: 'left',\n          icon: 'dollar',\n          content: 'Amount'\n        },\n        actionPosition: \"left\",\n        placeholder: \"$\",\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        name: \"amount\",\n        value: this.state.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"Paying \", this.props.selectedProfile.first_name, \" $\", this.state.amount, \" will bring Your Account Balance to $\", this.calculateTotal()), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"green\",\n        onClick: this.handlePayment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Pay\"), React.createElement(Button, {\n        color: \"grey\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return PaymentConfirmation;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    balance: state.balance,\n    selectedProfile: state.selectedProfile[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatingUserBalance: updatingUserBalance\n})(PaymentConfirmation);","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/react/transfer/profilePage/PaymentConfirmation.js"],"names":["React","Component","connect","updatingUserBalance","Button","Modal","Input","PaymentConfirmation","handlePayment","currentUserObject","id","props","currentUser","balance","calculateTotal","recipientBalance","selectedProfile","state","amount","recipientObject","clearWithdrawState","handleToggle","setState","open","handleChange","event","target","name","value","isNaN","payment","newTotal","parseFloat","width","first_name","color","labelPosition","icon","content","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updatingUserBalance } from '../../../redux/actions/balances.js'\n\nimport { Button, Modal, Input } from 'semantic-ui-react'\n\nclass PaymentConfirmation extends Component {\n  constructor() {\n    super()\n    this.state = {\n      amount: 0,\n      open:false\n    }\n  }\n\n  handlePayment = () => {\n    let currentUserObject = {\n      id: this.props.currentUser,\n      balance: this.calculateTotal()\n    }\n\n    let recipientBalance = this.props.selectedProfile.balance + this.state.amount\n\n    let recipientObject = {\n      id: this.props.selectedProfile.id,\n      balance: recipientBalance\n    }\n\n    debugger\n\n    this.props.updatingUserBalance(currentUserObject)\n    this.props.clearWithdrawState()\n    this.handleToggle()\n  }\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  // RETURNS UPDATED BALANCE AS THE DIFF OF OLD BALANCE - WITHDRAWAL\n  calculateTotal = () => {\n    let balance = this.props.balance\n    if (isNaN(balance)) {\n      balance = 0\n    }\n    let payment = this.state.amount\n    if (isNaN(payment) || payment === '') {\n      payment = 0\n    }\n    let newTotal = parseFloat(balance) - parseFloat(payment)\n    return newTotal\n  }\n\n  render() {\n    return(\n      <Modal open={this.state.open} size='large' trigger={\n        <Button onClick={this.handleToggle}color='blue' style={{width:'200px'}}>Pay</Button>\n      }>\n        <Modal.Header>Pay {this.props.selectedProfile.first_name}</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.handleChange}\n            action={{ color: 'green', labelPosition: 'left', icon: 'dollar', content: 'Amount' }}\n            actionPosition='left'\n            placeholder='$'\n            type='number'\n            min=\"0.01\"\n            step=\"0.01\"\n            name='amount'\n            value={this.state.amount}\n          />\n          Paying {this.props.selectedProfile.first_name} ${this.state.amount} will bring Your Account Balance to ${this.calculateTotal()}\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.handlePayment}>Pay</Button>\n          <Button color='grey' onClick={this.handleToggle}>Cancel</Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    balance: state.balance,\n    selectedProfile: state.selectedProfile[0]\n  }\n}\n\nexport default connect(mapStateToProps, { updatingUserBalance })(PaymentConfirmation)\n"]},"metadata":{},"sourceType":"module"}