{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/module_5/poker_app_frontend/src/react/transfer/bankContainer/DepositConfirmation.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updatingUserBalance } from '../../../redux/actions/balances.js';\nimport { Button, Modal } from 'semantic-ui-react';\n\nvar DepositConfirmation =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DepositConfirmation, _Component);\n\n  function DepositConfirmation() {\n    var _this;\n\n    _classCallCheck(this, DepositConfirmation);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DepositConfirmation).call(this));\n\n    _this.handleDeposit = function () {\n      var updateObject = {\n        id: _this.props.currentUser,\n        balance: _this.calculateTotal()\n      };\n      debugger;\n\n      _this.props.updatingUserBalance(updateObject);\n\n      _this.props.clearDepositState();\n\n      _this.handleToggle();\n    };\n\n    _this.handleToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.calculateTotal = function () {\n      var balance = _this.props.balance;\n\n      if (isNaN(balance)) {\n        balance = 0;\n      }\n\n      var deposit = _this.props.deposit;\n\n      if (isNaN(deposit) || deposit === '') {\n        deposit = 0;\n      }\n\n      var newTotal = parseFloat(balance) + parseFloat(deposit);\n      return newTotal;\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(DepositConfirmation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        open: this.state.open,\n        size: \"large\",\n        trigger: React.createElement(Button, {\n          onClick: this.handleToggle,\n          color: \"blue\",\n          style: {\n            width: '200px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Deposit\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Deposit Confirmation\"), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Deposit $\", this.props.deposit, \" to bring Your Account Balance to $\", this.calculateTotal()), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"green\",\n        onClick: this.handleDeposit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Deposit\"), React.createElement(Button, {\n        color: \"grey\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return DepositConfirmation;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    balance: state.balance\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatingUserBalance: updatingUserBalance\n})(DepositConfirmation);","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/react/transfer/bankContainer/DepositConfirmation.js"],"names":["React","Component","connect","updatingUserBalance","Button","Modal","DepositConfirmation","handleDeposit","updateObject","id","props","currentUser","balance","calculateTotal","clearDepositState","handleToggle","setState","open","state","isNaN","deposit","newTotal","parseFloat","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updatingUserBalance } from '../../../redux/actions/balances.js'\n\nimport { Button, Modal } from 'semantic-ui-react'\n\nclass DepositConfirmation extends Component {\n  constructor() {\n    super()\n    this.state = {\n      open:false\n    }\n  }\n\n  handleDeposit = () => {\n    let updateObject = {\n      id: this.props.currentUser,\n      balance: this.calculateTotal()\n    }\n\n    debugger\n\n    this.props.updatingUserBalance(updateObject)\n    this.props.clearDepositState()\n    this.handleToggle()\n  }\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n  // RETURNS UPDATED BALANCE AS THE SUM OF OLD BALANCE + DEPOSIT\n  calculateTotal = () => {\n    let balance = this.props.balance\n    if (isNaN(balance)) {\n      balance = 0\n    }\n    let deposit = this.props.deposit\n    if (isNaN(deposit) || deposit === '') {\n      deposit = 0\n    }\n    let newTotal = parseFloat(balance) + parseFloat(deposit)\n    return newTotal\n  }\n\n  render() {\n    return(\n      <Modal open={this.state.open} size='large' trigger={\n        <Button onClick={this.handleToggle} color='blue' style={{width:'200px'}}>Deposit</Button>\n      }>\n        <Modal.Header>Deposit Confirmation</Modal.Header>\n\n        <Modal.Content>\n          Deposit ${this.props.deposit} to bring Your Account Balance to ${this.calculateTotal()}\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color='green' onClick={this.handleDeposit}>Deposit</Button>\n          <Button color='grey' onClick={this.handleToggle}>Cancel</Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    balance: state.balance\n  }\n}\n\nexport default connect(mapStateToProps, { updatingUserBalance })(DepositConfirmation)\n"]},"metadata":{},"sourceType":"module"}