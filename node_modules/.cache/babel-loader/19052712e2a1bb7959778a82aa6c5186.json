{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Development/module_5/poker_app_frontend/src/react/transfer/profilePage/PayForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updatingUserBalance, updatingRecipientBalance } from '../../../redux/actions/balances.js';\nimport { postingTransaction } from '../../../redux/actions/users.js';\nimport { Button, Modal, Input, Grid, Container } from 'semantic-ui-react';\n\nvar PayForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PayForm, _Component);\n\n  function PayForm() {\n    var _this;\n\n    _classCallCheck(this, PayForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayForm).call(this));\n\n    _this.resetState = function () {\n      _this.setState({\n        amount: 0,\n        message: '',\n        open: false\n      });\n    };\n\n    _this.handlePayment = function () {\n      var currentUserBalanceObject = {\n        id: localStorage.getItem('currentUser'),\n        balance: _this.calculateTotal()\n      };\n      var recipientBalance = parseFloat(_this.props.selectedProfile.balance) + parseFloat(_this.state.amount);\n      var recipientBalanceObject = {\n        id: _this.props.selectedProfile.id,\n        balance: recipientBalance\n      };\n\n      _this.props.updatingUserBalance(currentUserBalanceObject);\n\n      _this.props.updatingRecipientBalance(recipientBalanceObject);\n\n      var transactionObject = {\n        sender_id: localStorage.getItem('currentUser'),\n        recipient_id: _this.props.selectedProfile.id,\n        message: _this.state.message,\n        amount: _this.state.amount,\n        date: _this.formatDate()\n      };\n\n      _this.props.postingTransaction(transactionObject);\n\n      _this.resetState();\n\n      _this.handleToggle();\n    };\n\n    _this.formatDate = function () {\n      var d = new Date(),\n          month = '' + (d.getMonth() + 1),\n          day = '' + d.getDate(),\n          year = d.getFullYear();\n      if (month.length < 2) month = '0' + month;\n      if (day.length < 2) day = '0' + day;\n      return [year, month, day].join('-');\n    };\n\n    _this.handleToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.calculateTotal = function () {\n      var balance = _this.props.balance;\n\n      if (isNaN(balance)) {\n        balance = 0;\n      }\n\n      var payment = _this.state.amount;\n\n      if (isNaN(payment) || payment === '') {\n        payment = 0;\n      }\n\n      var newTotal = parseFloat(balance) - parseFloat(payment);\n      return newTotal;\n    };\n\n    _this.state = {\n      amount: 0,\n      message: '',\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(PayForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Modal, {\n        open: this.state.open,\n        size: \"large\",\n        style: {\n          height: '20em'\n        },\n        trigger: React.createElement(Button, {\n          onClick: this.handleToggle,\n          color: \"blue\",\n          style: {\n            width: '200px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Pay\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Pay \", this.props.selectedProfile.first_name), React.createElement(Modal.Content, {\n        style: {\n          justifyContent: 'center',\n          alignItem: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          float: 'left'\n        },\n        onChange: this.handleChange,\n        action: {\n          color: 'green',\n          labelPosition: 'left',\n          icon: 'dollar',\n          content: 'Amount'\n        },\n        actionPosition: \"left\",\n        placeholder: \"$\",\n        type: \"number\",\n        min: \"0.01\",\n        step: \"0.01\",\n        name: \"amount\",\n        value: this.state.amount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(Container, {\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Paying \", this.props.selectedProfile.first_name, \" $\", this.state.amount, \" will bring Your Account Balance to $\", this.calculateTotal()), React.createElement(Input, {\n        style: {\n          float: 'left'\n        },\n        onChange: this.handleChange,\n        placeholder: \"Leave a Message\",\n        type: \"textarea\",\n        name: \"message\",\n        value: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), React.createElement(Modal.Actions, {\n        style: {\n          marginTop: '9em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"green\",\n        onClick: this.handlePayment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Pay\"), React.createElement(Button, {\n        color: \"grey\",\n        onClick: this.handleToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return PayForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.currentUser,\n    balance: state.balance,\n    selectedProfile: state.selectedProfile[0]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updatingUserBalance: updatingUserBalance,\n  updatingRecipientBalance: updatingRecipientBalance,\n  postingTransaction: postingTransaction\n})(PayForm);","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/react/transfer/profilePage/PayForm.js"],"names":["React","Component","connect","updatingUserBalance","updatingRecipientBalance","postingTransaction","Button","Modal","Input","Grid","Container","PayForm","resetState","setState","amount","message","open","handlePayment","currentUserBalanceObject","id","localStorage","getItem","balance","calculateTotal","recipientBalance","parseFloat","props","selectedProfile","state","recipientBalanceObject","transactionObject","sender_id","recipient_id","date","formatDate","handleToggle","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","handleChange","event","target","name","value","isNaN","payment","newTotal","height","width","first_name","justifyContent","alignItem","float","color","labelPosition","icon","content","marginTop","mapStateToProps","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { updatingUserBalance, updatingRecipientBalance} from '../../../redux/actions/balances.js'\nimport { postingTransaction } from '../../../redux/actions/users.js'\n\nimport { Button, Modal, Input, Grid, Container } from 'semantic-ui-react'\n\nclass PayForm extends Component {\n  constructor() {\n    super()\n    this.state = {\n      amount: 0,\n      message:'',\n      open:false\n    }\n  }\n\n  resetState = () => {\n    this.setState({\n      amount: 0,\n      message:'',\n      open: false\n    })\n  }\n\n  handlePayment = () => {\n    let currentUserBalanceObject = {\n      id: localStorage.getItem('currentUser'),\n      balance: this.calculateTotal()\n    }\n\n    let recipientBalance = parseFloat(this.props.selectedProfile.balance) + parseFloat(this.state.amount)\n\n    let recipientBalanceObject = {\n      id: this.props.selectedProfile.id,\n      balance: recipientBalance\n    }\n\n    this.props.updatingUserBalance(currentUserBalanceObject)\n    this.props.updatingRecipientBalance(recipientBalanceObject)\n\n    let transactionObject = {\n      sender_id: localStorage.getItem('currentUser'),\n      recipient_id: this.props.selectedProfile.id,\n      message: this.state.message,\n      amount: this.state.amount,\n      date: this.formatDate()\n    }\n\n    this.props.postingTransaction(transactionObject)\n\n    this.resetState()\n    this.handleToggle()\n  }\n\n  formatDate = () => {\n    var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n  }\n\n  handleToggle = () => {\n    this.setState({\n      open: !this.state.open\n    })\n  }\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  // RETURNS UPDATED BALANCE AS THE DIFF OF OLD BALANCE - PAYMENT\n  calculateTotal = () => {\n    let balance = this.props.balance\n    if (isNaN(balance)) {\n      balance = 0\n    }\n    let payment = this.state.amount\n    if (isNaN(payment) || payment === '') {\n      payment = 0\n    }\n    let newTotal = parseFloat(balance) - parseFloat(payment)\n    return newTotal\n  }\n\n  render() {\n    return(\n      <Modal open={this.state.open} size='large' style={{ height: '20em'}} trigger={\n        <Button onClick={this.handleToggle}color='blue' style={{width:'200px'}}>Pay</Button>\n      }>\n        <Modal.Header>Pay {this.props.selectedProfile.first_name}</Modal.Header>\n        <Modal.Content\n          style={{\n            justifyContent: 'center',\n            alignItem: 'center'\n          }}\n        >\n          <Input\n            style={{\n              float: 'left'\n            }}\n            onChange={this.handleChange}\n            action={{ color: 'green', labelPosition: 'left', icon: 'dollar', content: 'Amount' }}\n            actionPosition='left'\n            placeholder='$'\n            type='number'\n            min=\"0.01\"\n            step=\"0.01\"\n            name='amount'\n            value={this.state.amount}\n          />\n          <Container\n            style={{\n              float: 'right'\n            }}\n          >\n            Paying {this.props.selectedProfile.first_name} ${this.state.amount} will bring Your Account Balance to ${this.calculateTotal()}\n          </Container>\n            <Input\n              style={{\n                float: 'left'\n              }}\n              onChange={this.handleChange}\n              placeholder='Leave a Message'\n              type='textarea'\n              name='message'\n              value={this.state.message}\n            />\n\n        </Modal.Content>\n        <Modal.Actions style={{marginTop: '9em'}}>\n          <Button color='green' onClick={this.handlePayment}>Pay</Button>\n          <Button color='grey' onClick={this.handleToggle}>Cancel</Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.currentUser,\n    balance: state.balance,\n    selectedProfile: state.selectedProfile[0]\n  }\n}\n\nexport default connect(mapStateToProps, { updatingUserBalance, updatingRecipientBalance, postingTransaction })(PayForm)\n"]},"metadata":{},"sourceType":"module"}