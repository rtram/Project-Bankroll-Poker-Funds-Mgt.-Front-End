{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/flatironschool/Development/Porfolio/module_5/poker_app_frontend/src/react/pokerdashboard/WinningPercentageDoughnutGraph.js\";\n\nimport React from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Header } from 'semantic-ui-react';\nimport './Dashboard.css';\n\nvar WinningPercentageDoughnutGraph = function WinningPercentageDoughnutGraph(props) {\n  var dataObject = {\n    data: {\n      labels: ['Winning sessions', 'Losing Sessions'],\n      datasets: [{\n        label: 'Win Loss Percentage',\n        // CHANGE THIS KEY/VALUE TO DISPLAY DATA POINTS\n        data: props.data,\n        backgroundColor: ['rgba(0, 255, 0, .4)', 'rgba(255, 0, 0, .4)'],\n        borderColor: ['green', 'red'],\n        borderWidth: 1\n      }]\n    }\n  };\n  var winCount;\n  var lossCount;\n  var winningPercentage;\n\n  if (_this.props.data) {\n    winCount = _this.props.data[0];\n    lossCount = _this.props.data[1];\n    winningPercentage = winCount / (winCount + lossCount);\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.data ? React.createElement(Header, {\n    as: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"You win \", parseInt(winningPercentage * 100), \"% of the sessions you play.\") : null, React.createElement(Doughnut, {\n    data: dataObject.data,\n    width: 300,\n    height: 200,\n    options: {\n      title: {\n        text: 'Session Winning Percentage',\n        display: true,\n        fontsize: 200\n      },\n      legend: {\n        display: true,\n        position: \"bottom\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }));\n};\n\nexport default WinningPercentageDoughnutGraph;","map":{"version":3,"sources":["/Users/flatironschool/Development/Porfolio/module_5/poker_app_frontend/src/react/pokerdashboard/WinningPercentageDoughnutGraph.js"],"names":["React","Doughnut","Header","WinningPercentageDoughnutGraph","props","dataObject","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","winCount","lossCount","winningPercentage","parseInt","title","text","display","fontsize","legend","position"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,iBAAP;;AAEA,IAAIC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAAC,KAAK,EAAI;AAC5C,MAAIC,UAAU,GAAG;AACfC,IAAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAE,CAAC,kBAAD,EAAqB,iBAArB,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,qBADA;AAEP;AACAH,QAAAA,IAAI,EAAEF,KAAK,CAACE,IAHL;AAIPI,QAAAA,eAAe,EAAE,CACb,qBADa,EAEb,qBAFa,CAJV;AAQPC,QAAAA,WAAW,EAAE,CACX,OADW,EAEX,KAFW,CARN;AAYPC,QAAAA,WAAW,EAAE;AAZN,OAAD;AAFR;AADS,GAAjB;AAoBA,MAAIC,QAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,iBAAJ;;AAEA,MAAI,KAAI,CAACX,KAAL,CAAWE,IAAf,EAAqB;AACnBO,IAAAA,QAAQ,GAAG,KAAI,CAACT,KAAL,CAAWE,IAAX,CAAgB,CAAhB,CAAX;AACAQ,IAAAA,SAAS,GAAG,KAAI,CAACV,KAAL,CAAWE,IAAX,CAAgB,CAAhB,CAAZ;AACAS,IAAAA,iBAAiB,GAAIF,QAAQ,IAAEA,QAAQ,GAAGC,SAAb,CAA7B;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KAAK,CAACE,IAAN,GAAa,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyBU,QAAQ,CAACD,iBAAiB,GAAG,GAArB,CAAjC,gCAAb,GAA+G,IADlH,EAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEV,UAAU,CAACC,IADnB;AAEE,IAAA,KAAK,EAAE,GAFT;AAGE,IAAA,MAAM,EAAE,GAHV;AAIE,IAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,4BADD;AAELC,QAAAA,OAAO,EAAE,IAFJ;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OADA;AAMPC,MAAAA,MAAM,EAAE;AACNF,QAAAA,OAAO,EAAE,IADH;AAENG,QAAAA,QAAQ,EAAE;AAFJ;AAND,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAqBD,CApDD;;AAsDA,eAAenB,8BAAf","sourcesContent":["import React from 'react'\nimport { Doughnut } from 'react-chartjs-2'\nimport { Header } from 'semantic-ui-react'\nimport './Dashboard.css'\n\nlet WinningPercentageDoughnutGraph = props => {\n  let dataObject = {\n    data: {\n        labels: ['Winning sessions', 'Losing Sessions'],\n        datasets: [{\n            label: 'Win Loss Percentage',\n            // CHANGE THIS KEY/VALUE TO DISPLAY DATA POINTS\n            data: props.data,\n            backgroundColor: [\n                'rgba(0, 255, 0, .4)',\n                'rgba(255, 0, 0, .4)',\n            ],\n            borderColor: [\n              'green',\n              'red'\n            ],\n            borderWidth: 1\n        }]\n    }\n  }\n\n  let winCount;\n  let lossCount;\n  let winningPercentage;\n\n  if (this.props.data) {\n    winCount = this.props.data[0]\n    lossCount = this.props.data[1]\n    winningPercentage = (winCount/(winCount + lossCount))\n  }\n\n  return (\n    <div>\n      {props.data ? <Header as='h2'>You win {parseInt(winningPercentage * 100)}% of the sessions you play.</Header> : null}\n      <Doughnut\n        data={dataObject.data}\n        width={300}\n        height={200}\n        options={{\n          title: {\n            text: 'Session Winning Percentage',\n            display: true,\n            fontsize: 200\n          },\n          legend: {\n            display: true,\n            position: \"bottom\"\n          }\n        }}\n      />\n    </div>\n  )\n}\n\nexport default WinningPercentageDoughnutGraph\n"]},"metadata":{},"sourceType":"module"}