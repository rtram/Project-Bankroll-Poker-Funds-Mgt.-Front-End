{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/flatironschool/Development/module_5/poker_app_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from 'redux';\n\nvar searchBarRedirectReducer = function searchBarRedirectReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SEARCH_REQUEST\":\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nvar redirectIDReducer = function redirectIDReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SEARCH_REQUEST\":\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOADING\":\n      return true;\n\n    case \"FETCHED_SESSIONS\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar currentUserReducer = function currentUserReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'LOGGED_IN':\n      return action.payload.user;\n\n    default:\n      return state;\n  }\n};\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var userObject;\n\n  switch (action.type) {\n    case 'CREATED_USER':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      };\n      return userObject;\n\n    case 'FETCHED_USER_DATA':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      };\n      return userObject;\n\n    default:\n      return state;\n  }\n};\n\nvar sessionsReducer = function sessionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_SESSIONS':\n      return action.payload;\n\n    case 'POST_SESSION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'UPDATED_SESSION':\n      var originalSession = state.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      var index = state.indexOf(originalSession);\n\n      var sessionCopy = _toConsumableArray(state);\n\n      sessionCopy.splice(index, 1, action.payload);\n      return sessionCopy;\n\n    case 'DELETED_SESSION':\n      originalSession = state.find(function (session) {\n        return session.id === action.payload.id;\n      });\n      index = state.indexOf(originalSession);\n      sessionCopy = _toConsumableArray(state);\n      sessionCopy.splice(index, 1);\n      return sessionCopy;\n\n    default:\n      return state;\n  }\n};\n\nvar balanceReducer = function balanceReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.balance;\n\n    case 'UPDATED_USER_BALANCE':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar sentTransactionsReducer = function sentTransactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_transactions;\n\n    case 'POSTED_TRANSACTION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'COMPLETED_TRANSACTION':\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'POSTED_LIKE':\n      var originalTransaction = state.filter(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      var index = state.indexOf(originalTransaction[0]);\n\n      if (index !== -1) {\n        var copyState = state.slice();\n        copyState.splice(index, 1, action.payload);\n        return copyState;\n      } else {\n        return state;\n      }\n\n    case 'DELETED_LIKE':\n      originalTransaction = state.filter(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      index = state.indexOf(originalTransaction[0]);\n\n      if (index !== -1) {\n        var _copyState = state.slice();\n\n        _copyState.splice(index, 1, action.payload);\n\n        return _copyState;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar receivedTransactionsReducer = function receivedTransactionsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_transactions;\n\n    case 'POSTED_LIKE':\n      var originalTransaction = state.filter(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      var index = state.indexOf(originalTransaction[0]);\n\n      if (index !== -1) {\n        var copyState = state.slice();\n        copyState.splice(index, 1, action.payload);\n        return copyState;\n      } else {\n        return state;\n      }\n\n    case 'DELETED_LIKE':\n      originalTransaction = state.filter(function (transactionObject) {\n        return transactionObject.id === action.payload.id;\n      });\n      index = state.indexOf(originalTransaction[0]);\n\n      if (index !== -1) {\n        var _copyState2 = state.slice();\n\n        _copyState2.splice(index, 1, action.payload);\n\n        return _copyState2;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar sentRequestsReducer = function sentRequestsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_requests;\n\n    case \"POSTED_REQUEST\":\n      return [].concat(_toConsumableArray(state), [action.payload]);\n\n    case 'DELETED_REQUEST':\n      var originalRequest = state.find(function (request) {\n        return request.id === action.payload.id;\n      });\n\n      if (originalRequest !== undefined) {\n        var index = state.indexOf(originalRequest);\n\n        var requestCopy = _toConsumableArray(state);\n\n        requestCopy.splice(index, 1);\n        return requestCopy;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar receivedRequestsReducer = function receivedRequestsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_requests;\n\n    case 'FETCHED_USER_INBOX':\n      return action.payload;\n\n    case 'DELETED_REQUEST':\n      var originalRequest = state.find(function (request) {\n        return request.id === action.payload.id;\n      });\n\n      if (originalRequest !== undefined) {\n        var index = state.indexOf(originalRequest);\n\n        var requestCopy = _toConsumableArray(state);\n\n        requestCopy.splice(index, 1);\n        return requestCopy;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar userListReducer = function userListReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'FETCHED_USER_LIST':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar errorsReducer = function errorsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_ERRORS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar loginErrorReducer = function loginErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_LOGIN_ERROR':\n      return [action.payload];\n\n    default:\n      return state;\n  }\n};\n\nvar sessionErrorReducer = function sessionErrorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DISPLAY_SESSION_ERRORS':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nvar selectedProfileReducer = function selectedProfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHED_SELECTED_PROFILE\":\n      return [action.payload];\n\n    case \"CLEAR_SELECTED_PROFILE\":\n      return [];\n\n    case 'POSTED_TRANSACTION':\n      var stateCopy = [_objectSpread({}, state[0], {\n        received_transactions: [].concat(_toConsumableArray(state[0].received_transactions), [action.payload])\n      })];\n      return stateCopy;\n\n    case 'POSTED_LIKE':\n      if (state.length > 0) {\n        var originalReceivedTransaction = state[0].received_transactions.filter(function (transactionObject) {\n          return transactionObject.id === action.payload.id;\n        });\n        var originalSentTransaction = state[0].sent_transactions.filter(function (transactionObject) {\n          return transactionObject.id === action.payload.id;\n        });\n\n        if (originalReceivedTransaction.length > 0) {\n          var index = state[0].received_transactions.indexOf(originalReceivedTransaction[0]);\n          var copyReceivedTransactionState = state[0].received_transactions.slice();\n          copyReceivedTransactionState.splice(index, 1, action.payload);\n          stateCopy = [_objectSpread({}, state[0], {\n            received_transactions: _toConsumableArray(copyReceivedTransactionState)\n          })];\n        } else {\n          var _index = state[0].sent_transactions.indexOf(originalSentTransaction[0]);\n\n          var copySentTransactionState = state[0].sent_transactions.slice();\n          copySentTransactionState.splice(_index, 1, action.payload);\n          stateCopy = [_objectSpread({}, state[0], {\n            sent_transactions: _toConsumableArray(copySentTransactionState)\n          })];\n        }\n\n        return stateCopy;\n      } else {\n        return state;\n      }\n\n    case 'DELETED_LIKE':\n      if (state.length > 0) {\n        var _originalReceivedTransaction = state[0].received_transactions.filter(function (transactionObject) {\n          return transactionObject.id === action.payload.id;\n        });\n\n        var _originalSentTransaction = state[0].sent_transactions.filter(function (transactionObject) {\n          return transactionObject.id === action.payload.id;\n        });\n\n        if (_originalReceivedTransaction.length > 0) {\n          var _index2 = state[0].received_transactions.indexOf(_originalReceivedTransaction[0]);\n\n          var _copyReceivedTransactionState = state[0].received_transactions.slice();\n\n          _copyReceivedTransactionState.splice(_index2, 1, action.payload);\n\n          stateCopy = [_objectSpread({}, state[0], {\n            received_transactions: _toConsumableArray(_copyReceivedTransactionState)\n          })];\n        } else {\n          var _index3 = state[0].sent_transactions.indexOf(_originalSentTransaction[0]);\n\n          var _copySentTransactionState = state[0].sent_transactions.slice();\n\n          _copySentTransactionState.splice(_index3, 1, action.payload);\n\n          stateCopy = [_objectSpread({}, state[0], {\n            sent_transactions: _toConsumableArray(_copySentTransactionState)\n          })];\n        }\n\n        return stateCopy;\n      } else {\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nvar appReducer = combineReducers({\n  searchBarRedirect: searchBarRedirectReducer,\n  loading: loadingReducer,\n  currentUser: currentUserReducer,\n  user: userReducer,\n  sessions: sessionsReducer,\n  balance: balanceReducer,\n  sent_transactions: sentTransactionsReducer,\n  received_transactions: receivedTransactionsReducer,\n  sent_requests: sentRequestsReducer,\n  received_requests: receivedRequestsReducer,\n  userList: userListReducer,\n  errors: errorsReducer,\n  loginError: loginErrorReducer,\n  sessionError: sessionErrorReducer,\n  selectedProfile: selectedProfileReducer\n});\n\nvar rootReducer = function rootReducer(state, action) {\n  if (action.type === 'USER_LOGOUT') {\n    localStorage.clear();\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/flatironschool/Development/module_5/poker_app_frontend/src/redux/reducers/index.js"],"names":["combineReducers","searchBarRedirectReducer","state","action","type","redirectIDReducer","payload","loadingReducer","currentUserReducer","user","userReducer","userObject","username","first_name","last_name","url","sessionsReducer","originalSession","find","session","id","index","indexOf","sessionCopy","splice","balanceReducer","balance","sentTransactionsReducer","sent_transactions","originalTransaction","filter","transactionObject","copyState","slice","receivedTransactionsReducer","received_transactions","sentRequestsReducer","sent_requests","originalRequest","request","undefined","requestCopy","receivedRequestsReducer","received_requests","userListReducer","errorsReducer","loginErrorReducer","sessionErrorReducer","selectedProfileReducer","stateCopy","length","originalReceivedTransaction","originalSentTransaction","copyReceivedTransactionState","copySentTransactionState","appReducer","searchBarRedirect","loading","currentUser","sessions","userList","errors","loginError","sessionError","selectedProfile","rootReducer","localStorage","clear"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\nconst searchBarRedirectReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"SEARCH_REQUEST\":\n      return true\n    default:\n      return state\n  }\n}\n\nconst redirectIDReducer = (state = '', action) => {\n  switch (action.type) {\n    case \"SEARCH_REQUEST\":\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"LOADING\":\n      return true\n    case \"FETCHED_SESSIONS\":\n      return false;\n    default:\n      return state\n  }\n}\n\nconst currentUserReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'LOGGED_IN':\n      return action.payload.user\n    default:\n      return state\n  }\n}\n\nconst userReducer = (state = {}, action) => {\n  let userObject;\n  switch(action.type) {\n    case 'CREATED_USER':\n       userObject= {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      }\n      return userObject\n    case 'FETCHED_USER_DATA':\n      userObject = {\n        username: action.payload.username,\n        first_name: action.payload.first_name,\n        last_name: action.payload.last_name,\n        url: action.payload.url\n      }\n      return userObject\n    default:\n      return state\n  }\n}\n\nconst sessionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_SESSIONS':\n      return action.payload\n    case 'POST_SESSION':\n      return [...state, action.payload]\n    case 'UPDATED_SESSION':\n      let originalSession = state.find(session => session.id === action.payload.id)\n      let index = state.indexOf(originalSession)\n      let sessionCopy = [...state]\n      sessionCopy.splice(index, 1, action.payload)\n      return sessionCopy\n    case 'DELETED_SESSION':\n      originalSession = state.find(session => session.id === action.payload.id)\n      index = state.indexOf(originalSession)\n      sessionCopy = [...state]\n      sessionCopy.splice(index, 1)\n      return sessionCopy\n    default:\n      return state\n  }\n}\n\nconst balanceReducer = (state = 0, action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.balance\n    case 'UPDATED_USER_BALANCE':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst sentTransactionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_transactions\n    case 'POSTED_TRANSACTION':\n      return [...state, action.payload]\n    case 'COMPLETED_TRANSACTION':\n      return [...state, action.payload]\n    case 'POSTED_LIKE':\n      let originalTransaction = state.filter(transactionObject => transactionObject.id === action.payload.id)\n      let index = state.indexOf(originalTransaction[0])\n      if (index !== -1) {\n        let copyState = state.slice()\n        copyState.splice(index, 1, action.payload)\n        return copyState\n      } else {\n        return state\n      }\n    case 'DELETED_LIKE':\n      originalTransaction = state.filter(transactionObject => transactionObject.id === action.payload.id)\n      index = state.indexOf(originalTransaction[0])\n      if (index !== -1) {\n        let copyState = state.slice()\n        copyState.splice(index, 1, action.payload)\n        return copyState\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst receivedTransactionsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_transactions\n    case 'POSTED_LIKE':\n      let originalTransaction = state.filter(transactionObject => transactionObject.id === action.payload.id)\n      let index = state.indexOf(originalTransaction[0])\n      if (index !== -1) {\n        let copyState = state.slice()\n        copyState.splice(index, 1, action.payload)\n        return copyState\n      } else {\n        return state\n      }\n    case 'DELETED_LIKE':\n      originalTransaction = state.filter(transactionObject => transactionObject.id === action.payload.id)\n      index = state.indexOf(originalTransaction[0])\n      if (index !== -1) {\n        let copyState = state.slice()\n        copyState.splice(index, 1, action.payload)\n        return copyState\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst sentRequestsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.sent_requests\n    case \"POSTED_REQUEST\":\n      return [...state, action.payload]\n    case 'DELETED_REQUEST':\n      let originalRequest = state.find(request => request.id === action.payload.id)\n      if (originalRequest !== undefined) {\n        let index = state.indexOf(originalRequest)\n        let requestCopy = [...state]\n        requestCopy.splice(index, 1)\n        return requestCopy\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst receivedRequestsReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_DATA':\n      return action.payload.received_requests\n    case 'FETCHED_USER_INBOX':\n      return action.payload\n    case 'DELETED_REQUEST':\n      let originalRequest = state.find(request => request.id === action.payload.id)\n      if (originalRequest !== undefined) {\n        let index = state.indexOf(originalRequest)\n        let requestCopy = [...state]\n        requestCopy.splice(index, 1)\n        return requestCopy\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst userListReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'FETCHED_USER_LIST':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst errorsReducer = (state = {}, action) => {\n  switch(action.type) {\n    case 'DISPLAY_ERRORS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst loginErrorReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'DISPLAY_LOGIN_ERROR':\n      return [action.payload]\n    default:\n      return state\n  }\n}\n\nconst sessionErrorReducer = (state = [], action) => {\n  switch(action.type) {\n    case 'DISPLAY_SESSION_ERRORS':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nconst selectedProfileReducer = (state = [], action) => {\n  switch(action.type) {\n    case \"FETCHED_SELECTED_PROFILE\":\n      return [action.payload]\n    case \"CLEAR_SELECTED_PROFILE\":\n      return []\n    case 'POSTED_TRANSACTION':\n      let stateCopy = [{...state[0], received_transactions: [...state[0].received_transactions, action.payload]}]\n      return stateCopy\n    case 'POSTED_LIKE':\n      if (state.length > 0) {\n        let originalReceivedTransaction = state[0].received_transactions.filter(transactionObject => transactionObject.id === action.payload.id)\n        let originalSentTransaction = state[0].sent_transactions.filter(transactionObject => transactionObject.id === action.payload.id)\n\n        if (originalReceivedTransaction.length > 0) {\n          let index = state[0].received_transactions.indexOf(originalReceivedTransaction[0])\n          let copyReceivedTransactionState = state[0].received_transactions.slice()\n          copyReceivedTransactionState.splice(index, 1, action.payload)\n          stateCopy = [{...state[0], received_transactions: [...copyReceivedTransactionState]}]\n        } else {\n          let index = state[0].sent_transactions.indexOf(originalSentTransaction[0])\n          let copySentTransactionState = state[0].sent_transactions.slice()\n          copySentTransactionState.splice(index, 1, action.payload)\n          stateCopy = [{...state[0], sent_transactions: [...copySentTransactionState]}]\n        }\n        return stateCopy\n      } else {\n        return state\n      }\n    case 'DELETED_LIKE':\n      if (state.length > 0) {\n        let originalReceivedTransaction = state[0].received_transactions.filter(transactionObject => transactionObject.id === action.payload.id)\n        let originalSentTransaction = state[0].sent_transactions.filter(transactionObject => transactionObject.id === action.payload.id)\n\n        if (originalReceivedTransaction.length > 0) {\n          let index = state[0].received_transactions.indexOf(originalReceivedTransaction[0])\n          let copyReceivedTransactionState = state[0].received_transactions.slice()\n          copyReceivedTransactionState.splice(index, 1, action.payload)\n          stateCopy = [{...state[0], received_transactions: [...copyReceivedTransactionState]}]\n        } else {\n          let index = state[0].sent_transactions.indexOf(originalSentTransaction[0])\n          let copySentTransactionState = state[0].sent_transactions.slice()\n          copySentTransactionState.splice(index, 1, action.payload)\n          stateCopy = [{...state[0], sent_transactions: [...copySentTransactionState]}]\n        }\n        return stateCopy\n      } else {\n        return state\n      }\n    default:\n      return state\n  }\n}\n\nconst appReducer = combineReducers({\n  searchBarRedirect: searchBarRedirectReducer,\n  loading: loadingReducer,\n  currentUser: currentUserReducer,\n  user: userReducer,\n  sessions: sessionsReducer,\n  balance: balanceReducer,\n  sent_transactions: sentTransactionsReducer,\n  received_transactions: receivedTransactionsReducer,\n  sent_requests: sentRequestsReducer,\n  received_requests: receivedRequestsReducer,\n  userList: userListReducer,\n  errors: errorsReducer,\n  loginError: loginErrorReducer,\n  sessionError: sessionErrorReducer,\n  selectedProfile: selectedProfileReducer\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === 'USER_LOGOUT'){\n    localStorage.clear()\n    state = undefined\n  }\n\n  return appReducer(state, action)\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}